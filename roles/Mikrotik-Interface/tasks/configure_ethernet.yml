---
- name: "Update Ethernet interface {{ ethernet.key }}"
  routeros_command:
    commands: >
      /interface ethernet set [find default-name={{ ethernet.key }}]
      name={{ ethernet.value.name }}
      comment="{{ ethernet.value.comment | default('') }}"
      {{ ethernet.value.other_params | default('') }}

- name: "Check is set ip address for {{ ethernet.key }}"
  routeros_command:
    commands: >
      /ip address print where address="{{ ethernet.value.address }}" interface={{ ethernet.value.name }}
  register: ethernet_interface_ip_status
  when:
    - ethernet.value.address is defined
    - ethernet.value.name is defined

### SET IP ADRESS
- name: "Add ip address for {{ ethernet.key }} - {{ ethernet.value.address }}"
  routeros_command:
    commands: >
      /ip address add
      address={{ ethernet.value.address }}
      network={{ ethernet.value.network }}
      interface={{ ethernet.value.name }}
      comment="{{ ethernet.value.comment | default('') }}"
  when:
    - ethernet.value.address is defined
    - ethernet.value.name is defined
    - '" 0 " not in ethernet_interface_ip_status.stdout[0]'

- name: "Update ip address for {{ ethernet.key }} - {{ ethernet.value.address }}"
  routeros_command:
    commands: >
      /ip address set [ find address="{{ ethernet.value.address }}"] 
      address={{ ethernet.value.address }}
      network={{ ethernet.value.network }}
      interface={{ ethernet.value.name }}
      comment="{{ ethernet.value.comment | default('') }}"
  when:
    - ethernet.value.address is defined
    - ethernet.value.name is defined
    - '" 0 " in ethernet_interface_ip_status.stdout[0]'

### SET GRAPHING
- name: "Check is set graphing for {{ ethernet.key }}"
  routeros_command:
    commands: >
      /tool graphing interface print where interface="{{ ethernet.value.name }}"
  register:  graphing_interface_status

- name: "Add graphing for {{ ethernet.key }}"
  routeros_command:
    commands: >
      /tool graphing interface add
      interface={{ ethernet.value.name }}
      store-on-disk={{ ethernet.value.graphing.store_on_disk }}
      allow-address="{{ ethernet.value.graphing.allow_address | default('') }}"
  when:
    - ethernet.value.graphing is defined
    - '" 0 " not in graphing_interface_status.stdout[0]'

- name: "Update graphing for {{ ethernet.key }}"
  routeros_command:
    commands: >
      /tool graphing interface set [ find interface="{{ ethernet.value.name }}"] 
      store-on-disk={{ ethernet.value.graphing.store_on_disk }}
      allow-address="{{ ethernet.value.graphing.allow_address | default('') }}"
  when:
    - ethernet.value.graphing is defined
    - '" 0 " in graphing_interface_status.stdout[0]'