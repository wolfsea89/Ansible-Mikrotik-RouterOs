---
- name: "Update Wireless interface {{ wireless_interface.key }}"
  routeros_command:
    commands: >
      /interface wireless set [find default-name={{ wireless_interface.key }}]
      name={{ wireless_interface.value.name }}
      comment="{{ wireless_interface.value.comment | default('') }}"
      mode={{ wireless_interface.value.mode | default(vars_role_default_wireless_interface.mode)}}
      band={{ wireless_interface.value.band }}
      country={{ wireless_interface.value.country | default(vars_role_default_wireless_interface.country) }}
      channel-width={{ wireless_interface.value.channel_width }}
      frequency={{ wireless_interface.value.frequency | default(vars_role_default_wireless_interface.frequency) }}
      ssid="{{ wireless_interface.value.ssid }}"
      distance={{ wireless_interface.value.distance | default(vars_role_default_wireless_interface.distance) }}
      installation={{ wireless_interface.value.installation | default(vars_role_default_wireless_interface.installation) }}
      security-profile="{{ wireless_interface.value.security_profile }}"
      station-roaming={{ wireless_interface.value.station_roaming | default(vars_role_default_wireless_interface.station_roaming) }}
      wireless-protocol="{{ wireless_interface.value.wireless_protocol | default(vars_role_default_wireless_interface.wireless_protocol) }}"
      disabled={{ wireless_interface.value.disabled | default(vars_role_default_wireless_interface.disabled) }}
      {{ wireless_interface.other_params | default('') }}


### SET IP ADRESS
- name: "Check is set ip address for {{ wireless_interface.key }}"
  routeros_command:
    commands: >
      /ip address print where address="{{ wireless_interface.value.address }}" interface={{ wireless_interface.value.name }}
  register:  wireless_interface_ip_status
  when:
    - wireless_interface.value.address is defined
    - wireless_interface.value.name is defined

- name: "Add ip address for {{ wireless_interface.key }} - {{ wireless_interface.value.address }}"
  routeros_command:
    commands: >
      /ip address add
      address={{ wireless_interface.value.address }}
      network={{ wireless_interface.value.network }}
      interface={{ wireless_interface.value.name }}
      comment="{{ wireless_interface.value.comment | default('') }}"
  when:
    - wireless_interface.value.address is defined
    - wireless_interface.value.name is defined
    - '" 0 " not in wireless_interface_ip_status.stdout[0]'

- name: "Update ip address for {{ wireless_interface.key }} - {{ wireless_interface.value.address }}"
  routeros_command:
    commands: >
      /ip address set [ find address="{{ wireless_interface.value.address }}"] 
      address={{ wireless_interface.value.address }}
      network={{ wireless_interface.value.network }}
      interface={{ wireless_interface.value.name }}
      comment="{{ wireless_interface.value.comment | default('') }}"
  when:
    - wireless_interface.value.address is defined
    - wireless_interface.value.name is defined
    - '" 0 " in wireless_interface_ip_status.stdout[0]'

### SET GRAPHING
- name: "Check is set graphing for {{ wireless_interface.value.name }}"
  routeros_command:
    commands: >
      /tool graphing interface print where interface="{{ wireless_interface.value.name }}"
  register:  graphing_interface_status

- name: "Add graphing for {{ wireless_interface.key }}"
  routeros_command:
    commands: >
      /tool graphing interface add
      interface={{ wireless_interface.value.name }}
      store-on-disk={{ wireless_interface.value.graphing.store_on_disk }}
      allow-address="{{ wireless_interface.value.graphing.allow_address | default('') }}"
  when:
    - wireless_interface.value.graphing is defined
    - '" 0 " not in graphing_interface_status.stdout[0]'

- name: "Update graphing for {{ wireless_interface.key }}"
  routeros_command:
    commands: >
      /tool graphing interface set [ find interface="{{ wireless_interface.value.name }}"] 
      store-on-disk={{ wireless_interface.value.graphing.store_on_disk }}
      allow-address="{{ wireless_interface.value.graphing.allow_address | default('') }}"
  when:
    - wireless_interface.value.graphing is defined
    - '" 0 " in graphing_interface_status.stdout[0]'
