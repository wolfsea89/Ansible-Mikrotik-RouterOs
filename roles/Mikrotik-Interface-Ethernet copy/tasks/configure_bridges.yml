---
- name: "Check: {{ bridge.value.name }} is brige exist"
  routeros_command:
    commands: /interface bridge print from={{ bridge.value.name }}
  register: bridge_status

- name: "Add Brigde name {{ bridge.value.name }}"
  routeros_command:
    commands: >
      /interface bridge add
      name="{{ bridge.value.name }}"
      comment="{{ bridge.value.comment }}"
      {{ bridge.value.other_params | default('') }}
  when: '"no such item" in bridge_status.stdout[0]'

- name: "Update Brigde name {{ bridge.value.name }}"
  routeros_command:
    commands: >
      /interface bridge set [find name={{ bridge.value.name }}]
      comment="{{ bridge.value.comment }}"
      {{ bridge.value.other_params | default('') }}
  when: '"no such item" not in bridge_status.stdout[0]'

- name: "Add interface to {{ bridge.value.name }} bridge"
  routeros_command:
    commands: >
        /interface bridge port add
        bridge={{ bridge.value.name }}
        interface={{ item.name }}
        trusted={{ item.trusted }}
  loop: "{{ bridge.value.interfaces }}"
  when: bridge.value.interfaces is defined

- name: "Check is set ip address for {{ bridge.key }}"
  routeros_command:
    commands: >
      /ip address print where address="{{ bridge.value.address }}" interface={{ bridge.value.name }}
  register: bridge_interface_ip_status
  when:
    - bridge.value.address is defined
    - bridge.value.name is defined

### SET IP ADRESS
- name: "Add ip address for {{ bridge.key }} - {{ bridge.value.address }}"
  routeros_command:
    commands: >
      /ip address add
      address={{ bridge.value.address }}
      network={{ bridge.value.network }}
      interface={{ bridge.value.name }}
      comment="{{ bridge.value.comment | default('') }}"
  when:
    - bridge.value.address is defined
    - bridge.value.name is defined
    - '" 0 " not in bridge_interface_ip_status.stdout[0]'

- name: "Update ip address for {{ bridge.key }} - {{ bridge.value.address }}"
  routeros_command:
    commands: >
      /ip address set [ find address="{{ bridge.value.address }}"] 
      address={{ bridge.value.address }}
      network={{ bridge.value.network }}
      interface={{ bridge.value.name }}
      comment="{{ bridge.value.comment | default('') }}"
  when:
    - bridge.value.address is defined
    - bridge.value.name is defined
    - '" 0 " in bridge_interface_ip_status.stdout[0]'

### SET GRAPHING
- name: "Check is set graphing for {{ bridge.key }}"
  routeros_command:
    commands: >
      /tool graphing interface print where interface="{{ bridge.value.name }}"
  register:  graphing_interface_status

- name: "Add graphing for {{ bridge.key }}"
  routeros_command:
    commands: >
      /tool graphing interface add
      interface={{ bridge.value.name }}
      store-on-disk={{ bridge.value.graphing.store_on_disk }}
      allow-address="{{ bridge.value.graphing.allow_address | default('') }}"
  when:
    - bridge.value.graphing is defined
    - '" 0 " not in graphing_interface_status.stdout[0]'

- name: "Update graphing for {{ bridge.key }}"
  routeros_command:
    commands: >
      /tool graphing interface set [ find interface="{{ bridge.value.name }}"] 
      store-on-disk={{ bridge.value.graphing.store_on_disk }}
      allow-address="{{ bridge.value.graphing.allow_address | default('') }}"
  when:
    - bridge.value.graphing is defined
    - '" 0 " in graphing_interface_status.stdout[0]'